// @ Copyright 2025 Nestor Neto
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

#include <gtest/gtest.h>
#include <rclcpp/rclcpp.hpp>
#include <hardware_interface/component_parser.hpp>

TEST(SimpleParamTest, ReadUrdfParameters)
{
  rclcpp::init(0, nullptr);

  const std::string minimal_urdf =
    R"XML(
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/nestor/littlebot_ws/src/littlebot/littlebot_description/urdf/littlebot_description.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="littlebot">
  <!-- <xacro:include filename="$(find littlebot_description)/urdf/littlebot_sonar.urdf.xacro" /> -->
  <!-- Modelagem base_link "link" -->
  <!-- ********************************************************* -->
  <link name="base_link">
    </link>
  <!-- Robot Footprint -->
  <!-- ********************************************************* -->
  <!-- <link name="base_footprint"/> -->
  <!-- <joint name="base_joint" type="fixed">
      <parent link="base_link"/>
      <child link="base_footprint"/>
      <origin xyz="0.0 0.0 -0.03074" rpy="0 0 0"/>
    </joint> -->
  <!-- Modelagem chassis_link "link" and "joint"-->
  <!-- ********************************************************* -->
  <link name="chassis_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/littlebot.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.007"/>
      <geometry>
        <box size="0.21 0.11 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.19357368"/>
      <inertia ixx="1.84569610e-4" ixy="-4.09475462e-6" ixz="-2.91063667e-5" iyy="7.65700035e-4" iyz="2.32776537e-8" izz="9.00861891e-4"/>
    </inertial>
  </link>
  <joint name="base_link_to_chassis_link" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
  </joint>
  <!-- Modelagem caster wheel-->
  <!-- ********************************************************* -->
  <link name="caster">
    <visual>
      <origin rpy="3.14 0 3.14" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/Caster_Wheel_Plate.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="3.14 0 3.14" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.21 0.11 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="3.14 0 3.14" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="8.4e-7" ixy="-1.571e-14" ixz="-1.601e-7" iyy="8.4e-7" iyz="1.55e-14" izz="1.304e-6"/>
    </inertial>
  </link>
  <joint name="chassis_link_to_caster" type="continuous">
    <parent link="chassis_link"/>
    <child link="caster"/>
    <origin rpy="0 0 0" xyz="-0.0871 0.0 -0.00875"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
  </joint>
  <!-- Modelagem free wheel-->
  <!-- ********************************************************* -->
  <link name="free_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.21 0.11 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.007"/>
      <inertia ixx="3.6e-7" ixy="0" ixz="0" iyy="5.344e-7" iyz="0" izz="3.569e-7"/>
    </inertial>
  </link>
  <joint name="caster_to_free_wheel" type="continuous">
    <parent link="caster"/>
    <child link="free_wheel"/>
    <origin rpy="0 0 0" xyz="-0.015 0 -0.015"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <!-- Modelagem da IMU MPU-6050 "link" "joint" -->
  <!-- ********************************************************* -->
  <link name="imu_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/MPU_6050.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.21 0.11 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.00142672"/>
      <inertia ixx="4.54052487e-8" ixy="1.07305074e-10" ixz="-2.17782593e-10" iyy="2.70451174e-8" iyz="-4.58999382e-11" izz="7.14041804e-8"/>
    </inertial>
  </link>
  <joint name="chassis_link_to_imu" type="fixed">
    <parent link="chassis_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.028 0.0 0.005"/>
  </joint>
  <link name="left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/roda.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.571 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.03298"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <xacro:insert_block name="mesh_wheel_pose"/> -->
      <origin rpy="0 0 1.571" xyz="0 0 0"/>
      <mass value="0.041"/>
      <inertia ixx="2.967e-5" ixy="-7.675e-15" ixz="-4.765e-14" iyy="1.616e-5" iyz="-1.121e-16" izz="1.616e-5"/>
    </inertial>
  </link>
  <joint name="base_to_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="0.0281 0.067 -0.01425"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="left_wheel">
    <mu1 value="1000.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <link name="right_wheel">
    <visual>
      <origin rpy="0 0 3.142" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nestor/littlebot_ws/install/littlebot_description/share/littlebot_description/meshes/roda.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.571 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.03298"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <xacro:insert_block name="mesh_wheel_pose"/> -->
      <origin rpy="0 0 1.571" xyz="0 0 0"/>
      <mass value="0.041"/>
      <inertia ixx="2.967e-5" ixy="-7.675e-15" ixz="-4.765e-14" iyy="1.616e-5" iyz="-1.121e-16" izz="1.616e-5"/>
    </inertial>
  </link>
  <joint name="base_to_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="0.0281 -0.067 -0.01425"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="right_wheel">
    <mu1 value="1000.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <!-- Sonar models-->
  <!-- <xacro:littlebot_sonar sonar_numero="1">
    <origin xyz="0 0 -0.020267" rpy="0 0 0" />
    <origin xyz="0.07879836 0.03772198 0.02500000" rpy="0 0 0.686455448" />
  </xacro:littlebot_sonar> -->
  <!-- <xacro:littlebot_sonar sonar_numero="2">
    <origin xyz="0 0 -0.020267" rpy="0 0 0" />
    <origin xyz="0.08880761 0.02002920 0.02500000" rpy="0 0 0.343218997"/>
  </xacro:littlebot_sonar> -->
  <!-- <xacro:littlebot_sonar sonar_numero="3">
    <origin xyz="0 0 -0.020267" rpy="0 0 0" />
    <origin xyz="0.092279 0.0 0.02500000" rpy="0 0 0" />
  </xacro:littlebot_sonar> -->
  <!-- <xacro:littlebot_sonar sonar_numero="4">
    <origin xyz="0 0 -0.020267" rpy="0 0 0" />
    <origin xyz="0.08880761 -0.02002920 0.02500000" rpy="0 0 -0.343218997"/>
  </xacro:littlebot_sonar> -->
  <!-- <xacro:littlebot_sonar sonar_numero="5">
    <origin xyz="0 0 -0.020267" rpy="0 0 0" />
    <origin xyz="0.07879836 -0.03772198 0.02500000" rpy="0 0 -0.686455448"/>
  </xacro:littlebot_sonar> -->
  <ros2_control name="littlebot_hardware" type="system">
    <hardware>
      <plugin>littlebot_base/LittlebotHardware</plugin>
      <param name="left_wheel_name">base_to_left_wheel</param>
      <param name="right_wheel_name">base_to_right_wheel</param>
      <param name="wheel_diameter">0.065</param>
      <param name="encoder_PPR">40</param>
      <param name="serial_port">/dev/rfcomm0</param>
    </hardware>
    <joint name="base_to_left_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="base_to_right_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>
</robot>
)XML";

  // Parse URDF
  auto control_resources = hardware_interface::parse_control_resources_from_urdf(minimal_urdf);
  auto hardware_info = control_resources.front();

  // Check parameters
  // In this ROS2 / hardware_interface version parameters are on HardwareInfo directly
  const auto & params = hardware_info.hardware_parameters;

  EXPECT_GT(params.size(), 0u);
  // Print all parameters key = value
  std::cout << "Successfully read parameters from URDF! (" << params.size() << " entries)" << std::endl;
  for (const auto & kv : params) {
    std::cout << "  " << kv.first << " = " << kv.second << std::endl;
  }

  // EXPECT_EQ(params.at("serial_port"), "/dev/ttyUSB0");
  // EXPECT_EQ(params.at("baud_rate"), "115200");

  // std::cout << "Successfully read parameters from URDF!" << std::endl;
  // std::cout << "serial_port: " << params.at("serial_port") << std::endl;
  // std::cout << "baud_rate: " << params.at("baud_rate") << std::endl;

  rclcpp::shutdown();
}
